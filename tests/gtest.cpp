#include "gtest/gtest.h"
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/opencv.hpp"
#include "opencv2/videoio.hpp"

#include "../CircleFinder.hpp"

// Hand written tests
#include "IsCircleTest/ToFewPoints.h"
#include "IsCircleTest/NoMatchingPoints.h"


// Autogenerated Tests (please keep them in alphabetical order
#include "IsCircleTest/AutogeneratedImageTests/BasicCircle.h"
#include "IsCircleTest/AutogeneratedImageTests/CircleFragment.h"
#include "IsCircleTest/AutogeneratedImageTests/CircleWithEdges.h"
#include "IsCircleTest/AutogeneratedImageTests/CircleWithLine.h"
#include "IsCircleTest/AutogeneratedImageTests/DoubleDrawnLineFromScreenshot.h"
#include "IsCircleTest/AutogeneratedImageTests/DoubleDrawnLineFromScreenshot2.h"
#include "IsCircleTest/AutogeneratedImageTests/DoubleLineHookFromScreenshot.h"
#include "IsCircleTest/AutogeneratedImageTests/DrawnLineFromScreenshot.h"
#include "IsCircleTest/AutogeneratedImageTests/DrawnLineFromScreenshot2.h"
#include "IsCircleTest/AutogeneratedImageTests/HalfCircle.h"
#include "IsCircleTest/AutogeneratedImageTests/HorizontalLine.h"
#include "IsCircleTest/AutogeneratedImageTests/ImperfectCircle.h"
#include "IsCircleTest/AutogeneratedImageTests/KeyFromKeyboardFromScreenshot.h"
#include "IsCircleTest/AutogeneratedImageTests/LineWithEdges.h"
#include "IsCircleTest/AutogeneratedImageTests/LineWithHookFromScreenshot.h"
#include "IsCircleTest/AutogeneratedImageTests/LineWithLargeEdge.h"
#include "IsCircleTest/AutogeneratedImageTests/LineWithSmallEdge.h"
#include "IsCircleTest/AutogeneratedImageTests/Omega.h"
#include "IsCircleTest/AutogeneratedImageTests/RoundedLine.h"
#include "IsCircleTest/AutogeneratedImageTests/SmallCircle.h"
#include "IsCircleTest/AutogeneratedImageTests/SpaceBarEdgeFromScreenshot.h"
#include "IsCircleTest/AutogeneratedImageTests/TeaBottleContourFromScreenshot.h"
#include "IsCircleTest/AutogeneratedImageTests/Triangle.h"
#include "IsCircleTest/AutogeneratedImageTests/VerticalLine.h"
#include "IsCircleTest/AutogeneratedImageTests/VerySmallCircle.h"


int main(int argc, char **argv) {
    dbg::init(dbg::FILE);
      ::testing::InitGoogleTest(&argc, argv);
    int res = RUN_ALL_TESTS();
    dbg::close();
    return res;
}